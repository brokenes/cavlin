<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.pattern.server.dao.ShopDao" >
  <resultMap id="BaseResultMap" type="com.github.pattern.common.domain.Shop" >
    <id column="shop_id" property="shopId" jdbcType="INTEGER" />
    <result column="brand" property="brand" jdbcType="VARCHAR" />
    <result column="shop_no" property="shopNo" jdbcType="VARCHAR" />
    <result column="agent_id" property="agentId" jdbcType="INTEGER" />
    <result column="shop_name" property="shopName" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    shop_id, brand, shop_no, agent_id, shop_name, address, status, phone, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pattern_shop
    where shop_id = #{shopId,jdbcType=INTEGER}
  </select>
  <select id="selectByShopName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from pattern_shop
    where shop_name = #{shopName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pattern_shop
    where shop_id = #{shopId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.pattern.common.domain.Shop" >
    insert into pattern_shop (shop_id, brand, shop_no, 
      agent_id, shop_name, address, 
      status, phone, create_time, 
      update_time)
    values (#{shopId,jdbcType=INTEGER}, #{brand,jdbcType=VARCHAR}, #{shopNo,jdbcType=VARCHAR}, 
      #{agentId,jdbcType=INTEGER}, #{shopName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.github.pattern.common.domain.Shop" >
    insert into pattern_shop
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="shopId != null" >
        shop_id,
      </if>
      <if test="brand != null" >
        brand,
      </if>
      <if test="shopNo != null" >
        shop_no,
      </if>
      <if test="agentId != null" >
        agent_id,
      </if>
      <if test="shopName != null" >
        shop_name,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="shopId != null" >
        #{shopId,jdbcType=INTEGER},
      </if>
      <if test="brand != null" >
        #{brand,jdbcType=VARCHAR},
      </if>
      <if test="shopNo != null" >
        #{shopNo,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null" >
        #{agentId,jdbcType=INTEGER},
      </if>
      <if test="shopName != null" >
        #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.pattern.common.domain.Shop" >
    update pattern_shop
    <set >
      <if test="brand != null" >
        brand = #{brand,jdbcType=VARCHAR},
      </if>
      <if test="shopNo != null" >
        shop_no = #{shopNo,jdbcType=VARCHAR},
      </if>
      <if test="agentId != null" >
        agent_id = #{agentId,jdbcType=INTEGER},
      </if>
      <if test="shopName != null" >
        shop_name = #{shopName,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where shop_id = #{shopId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.pattern.common.domain.Shop" >
    update pattern_shop
    set brand = #{brand,jdbcType=VARCHAR},
      shop_no = #{shopNo,jdbcType=VARCHAR},
      agent_id = #{agentId,jdbcType=INTEGER},
      shop_name = #{shopName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where shop_id = #{shopId,jdbcType=INTEGER}
  </update>
  
  
   <select id="pageCount" resultType="long" parameterType="map" >
    select count(*)
     from pattern_shop
      <where>
         <if test="agentId != null">
            and agent_id = #{agentId,jdbcType=INTEGER}
         </if>
         <if test="statusList != null and statusList.size() > 0">
      		and status in
      		<foreach collection="statusList" item="status" index="index" open="(" close=")" separator=",">
	   			#{status,jdbcType=INTEGER}
			</foreach>
      	</if>
      </where>
  </select>
  
  <select id="pageList" resultMap="BaseResultMap" parameterType="map" >
    select 
     <include refid="Base_Column_List" />
     from pattern_shop
      <where>
         <if test="agentId != null">
            and agent_id = #{agentId,jdbcType=INTEGER}
         </if>
         <if test="statusList != null and statusList.size() > 0">
      		and status in
      		<foreach collection="statusList" item="status" index="index" open="(" close=")" separator=",">
	   			#{status,jdbcType=TINYINT}
			</foreach>
      	</if>
      </where>
      <if test="start !=null and offset !=null">
        limit #{start}, #{offset}
      </if>
  </select>
  
  <select id="selectByAgentId" resultMap="BaseResultMap" parameterType="map" >
    select 
     <include refid="Base_Column_List" />
     from pattern_shop
      <where>
         <if test="agentId != null">
            and agent_id = #{agentId,jdbcType=INTEGER}
         </if>
         <if test="statusList != null and statusList.size() > 0">
      		and status in
      		<foreach collection="statusList" item="status" index="index" open="(" close=")" separator=",">
	   			#{status,jdbcType=TINYINT}
			</foreach>
      	</if>
      </where>
  </select>
  
  
</mapper>