<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.pattern.server.dao.CustomerPayChannelInfoDao" >
  <resultMap id="BaseResultMap" type="com.github.pattern.common.domain.CustomerPayChannelInfo" >
    <id column="customer_pay_channelinfo_id" property="customerPayChannelinfoId" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="paytype_id" property="paytypeId" jdbcType="INTEGER" />
    <result column="pay_channelinfo_id" property="payChannelinfoId" jdbcType="INTEGER" />
    <result column="is_froze" property="isFroze" jdbcType="BIT" />
    <result column="pay_channel_account_id" property="payChannelAccountId" jdbcType="INTEGER" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    customer_pay_channelinfo_id, customer_id, paytype_id, pay_channelinfo_id, is_froze, 
    pay_channel_account_id, priority, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pattern_customer_pay_channelinfo
    where customer_pay_channelinfo_id = #{customerPayChannelinfoId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pattern_customer_pay_channelinfo
    where customer_pay_channelinfo_id = #{customerPayChannelinfoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.pattern.common.domain.CustomerPayChannelInfo" >
    insert into pattern_customer_pay_channelinfo (customer_pay_channelinfo_id, customer_id, 
      paytype_id, pay_channelinfo_id, is_froze, 
      pay_channel_account_id, priority, remark
      )
    values (#{customerPayChannelinfoId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, 
      #{paytypeId,jdbcType=INTEGER}, #{payChannelinfoId,jdbcType=INTEGER}, #{isFroze,jdbcType=BIT}, 
      #{payChannelAccountId,jdbcType=INTEGER}, #{priority,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.pattern.common.domain.CustomerPayChannelInfo" >
    insert into pattern_customer_pay_channelinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerPayChannelinfoId != null" >
        customer_pay_channelinfo_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="paytypeId != null" >
        paytype_id,
      </if>
      <if test="payChannelinfoId != null" >
        pay_channelinfo_id,
      </if>
      <if test="isFroze != null" >
        is_froze,
      </if>
      <if test="payChannelAccountId != null" >
        pay_channel_account_id,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerPayChannelinfoId != null" >
        #{customerPayChannelinfoId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="paytypeId != null" >
        #{paytypeId,jdbcType=INTEGER},
      </if>
      <if test="payChannelinfoId != null" >
        #{payChannelinfoId,jdbcType=INTEGER},
      </if>
      <if test="isFroze != null" >
        #{isFroze,jdbcType=BIT},
      </if>
      <if test="payChannelAccountId != null" >
        #{payChannelAccountId,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.pattern.common.domain.CustomerPayChannelInfo" >
    update pattern_customer_pay_channelinfo
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="paytypeId != null" >
        paytype_id = #{paytypeId,jdbcType=INTEGER},
      </if>
      <if test="payChannelinfoId != null" >
        pay_channelinfo_id = #{payChannelinfoId,jdbcType=INTEGER},
      </if>
      <if test="isFroze != null" >
        is_froze = #{isFroze,jdbcType=BIT},
      </if>
      <if test="payChannelAccountId != null" >
        pay_channel_account_id = #{payChannelAccountId,jdbcType=INTEGER},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where customer_pay_channelinfo_id = #{customerPayChannelinfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.pattern.common.domain.CustomerPayChannelInfo" >
    update pattern_customer_pay_channelinfo
    set customer_id = #{customerId,jdbcType=INTEGER},
      paytype_id = #{paytypeId,jdbcType=INTEGER},
      pay_channelinfo_id = #{payChannelinfoId,jdbcType=INTEGER},
      is_froze = #{isFroze,jdbcType=BIT},
      pay_channel_account_id = #{payChannelAccountId,jdbcType=INTEGER},
      priority = #{priority,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where customer_pay_channelinfo_id = #{customerPayChannelinfoId,jdbcType=INTEGER}
  </update>
</mapper>