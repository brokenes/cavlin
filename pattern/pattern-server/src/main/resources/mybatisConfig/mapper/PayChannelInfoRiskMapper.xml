<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.pattern.server.dao.PayChannelInfoRiskDao" >
  <resultMap id="BaseResultMap" type="com.github.pattern.common.domain.PayChannelInfoRisk" >
    <id column="pay_channelinfo_risk_id" property="payChannelinfoRiskId" jdbcType="INTEGER" />
    <result column="pay_channelinfo_id" property="payChannelinfoId" jdbcType="INTEGER" />
    <result column="paytype_id" property="paytypeId" jdbcType="VARCHAR" />
    <result column="allow_time" property="allowTime" jdbcType="VARCHAR" />
    <result column="allow_num" property="allowNum" jdbcType="INTEGER" />
    <result column="pay_interval" property="payInterval" jdbcType="INTEGER" />
    <result column="single_money" property="singleMoney" jdbcType="VARCHAR" />
    <result column="day_money" property="dayMoney" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="user_most_number" property="userMostNumber" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    pay_channelinfo_risk_id, pay_channelinfo_id, paytype_id, allow_time, allow_num, pay_interval, 
    single_money, day_money, remark, user_most_number
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pattern_pay_channelinfo_risk
    where pay_channelinfo_risk_id = #{payChannelinfoRiskId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pattern_pay_channelinfo_risk
    where pay_channelinfo_risk_id = #{payChannelinfoRiskId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.pattern.common.domain.PayChannelInfoRisk" >
    insert into pattern_pay_channelinfo_risk (pay_channelinfo_risk_id, pay_channelinfo_id, 
      paytype_id, allow_time, allow_num, 
      pay_interval, single_money, day_money, 
      remark, user_most_number)
    values (#{payChannelinfoRiskId,jdbcType=INTEGER}, #{payChannelinfoId,jdbcType=INTEGER}, 
      #{paytypeId,jdbcType=VARCHAR}, #{allowTime,jdbcType=VARCHAR}, #{allowNum,jdbcType=INTEGER}, 
      #{payInterval,jdbcType=INTEGER}, #{singleMoney,jdbcType=VARCHAR}, #{dayMoney,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{userMostNumber,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.github.pattern.common.domain.PayChannelInfoRisk" >
    insert into pattern_pay_channelinfo_risk
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="payChannelinfoRiskId != null" >
        pay_channelinfo_risk_id,
      </if>
      <if test="payChannelinfoId != null" >
        pay_channelinfo_id,
      </if>
      <if test="paytypeId != null" >
        paytype_id,
      </if>
      <if test="allowTime != null" >
        allow_time,
      </if>
      <if test="allowNum != null" >
        allow_num,
      </if>
      <if test="payInterval != null" >
        pay_interval,
      </if>
      <if test="singleMoney != null" >
        single_money,
      </if>
      <if test="dayMoney != null" >
        day_money,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="userMostNumber != null" >
        user_most_number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="payChannelinfoRiskId != null" >
        #{payChannelinfoRiskId,jdbcType=INTEGER},
      </if>
      <if test="payChannelinfoId != null" >
        #{payChannelinfoId,jdbcType=INTEGER},
      </if>
      <if test="paytypeId != null" >
        #{paytypeId,jdbcType=VARCHAR},
      </if>
      <if test="allowTime != null" >
        #{allowTime,jdbcType=VARCHAR},
      </if>
      <if test="allowNum != null" >
        #{allowNum,jdbcType=INTEGER},
      </if>
      <if test="payInterval != null" >
        #{payInterval,jdbcType=INTEGER},
      </if>
      <if test="singleMoney != null" >
        #{singleMoney,jdbcType=VARCHAR},
      </if>
      <if test="dayMoney != null" >
        #{dayMoney,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="userMostNumber != null" >
        #{userMostNumber,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.pattern.common.domain.PayChannelInfoRisk" >
    update pattern_pay_channelinfo_risk
    <set >
      <if test="payChannelinfoId != null" >
        pay_channelinfo_id = #{payChannelinfoId,jdbcType=INTEGER},
      </if>
      <if test="paytypeId != null" >
        paytype_id = #{paytypeId,jdbcType=VARCHAR},
      </if>
      <if test="allowTime != null" >
        allow_time = #{allowTime,jdbcType=VARCHAR},
      </if>
      <if test="allowNum != null" >
        allow_num = #{allowNum,jdbcType=INTEGER},
      </if>
      <if test="payInterval != null" >
        pay_interval = #{payInterval,jdbcType=INTEGER},
      </if>
      <if test="singleMoney != null" >
        single_money = #{singleMoney,jdbcType=VARCHAR},
      </if>
      <if test="dayMoney != null" >
        day_money = #{dayMoney,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="userMostNumber != null" >
        user_most_number = #{userMostNumber,jdbcType=INTEGER},
      </if>
    </set>
    where pay_channelinfo_risk_id = #{payChannelinfoRiskId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.pattern.common.domain.PayChannelInfoRisk" >
    update pattern_pay_channelinfo_risk
    set pay_channelinfo_id = #{payChannelinfoId,jdbcType=INTEGER},
      paytype_id = #{paytypeId,jdbcType=VARCHAR},
      allow_time = #{allowTime,jdbcType=VARCHAR},
      allow_num = #{allowNum,jdbcType=INTEGER},
      pay_interval = #{payInterval,jdbcType=INTEGER},
      single_money = #{singleMoney,jdbcType=VARCHAR},
      day_money = #{dayMoney,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      user_most_number = #{userMostNumber,jdbcType=INTEGER}
    where pay_channelinfo_risk_id = #{payChannelinfoRiskId,jdbcType=INTEGER}
  </update>
</mapper>