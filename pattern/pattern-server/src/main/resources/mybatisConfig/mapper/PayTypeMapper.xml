<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.pattern.server.dao.PayTypeDao" >
  <resultMap id="BaseResultMap" type="com.github.pattern.common.domain.PayType" >
    <id column="paytype_id" property="paytypeId" jdbcType="INTEGER" />
    <result column="payname" property="payname" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    paytype_id, payname, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pattern_paytype
    where paytype_id = #{paytypeId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pattern_paytype
    where paytype_id = #{paytypeId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.pattern.common.domain.PayType" >
    insert into pattern_paytype (paytype_id, payname, remark
      )
    values (#{paytypeId,jdbcType=INTEGER}, #{payname,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.github.pattern.common.domain.PayType" >
    insert into pattern_paytype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="paytypeId != null" >
        paytype_id,
      </if>
      <if test="payname != null" >
        payname,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="paytypeId != null" >
        #{paytypeId,jdbcType=INTEGER},
      </if>
      <if test="payname != null" >
        #{payname,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.pattern.common.domain.PayType" >
    update pattern_paytype
    <set >
      <if test="payname != null" >
        payname = #{payname,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where paytype_id = #{paytypeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.pattern.common.domain.PayType" >
    update pattern_paytype
    set payname = #{payname,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where paytype_id = #{paytypeId,jdbcType=INTEGER}
  </update>
</mapper>