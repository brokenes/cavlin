<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.pattern.server.dao.AgentDao" >
  <resultMap id="BaseResultMap" type="com.github.pattern.common.domain.Agent" >
    <id column="agent_id" property="agentId" jdbcType="INTEGER" />
    <result column="agent_name" property="agentName" jdbcType="VARCHAR" />
    <result column="agent_no" property="agentNo" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="registry_date" property="registryDate" jdbcType="TIMESTAMP" />
    <result column="business_license" property="businessLicense" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="company_pic_path" property="companyPicPath" jdbcType="VARCHAR" />
    <result column="idcard_front_path" property="idCardFrontPath" jdbcType="VARCHAR" />
    <result column="idcard_back_path" property="idCardBackPath" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="qq" property="qq" jdbcType="VARCHAR" />
    <result column="wechat" property="wechat" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    agent_id, agent_name, agent_no, status, type, registry_date, business_license, address, 
    company_pic_path, idcard_front_path, idcard_back_path, phone, email, qq, wechat, 
    create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pattern_agent
    where agent_id = #{agentId,jdbcType=INTEGER}
  </select>
  <select id="selectByAgentName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from pattern_agent
    where agent_name = #{agentName,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pattern_agent
    where agent_id = #{agentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.pattern.common.domain.Agent" >
    insert into pattern_agent (agent_id, agent_name, agent_no, 
      status, type, registry_date, 
      business_license, address, company_pic_path, 
      idcard_front_path, idcard_back_path, phone, 
      email, qq, wechat, 
      create_date, update_date)
    values (#{agentId,jdbcType=INTEGER}, #{agentName,jdbcType=VARCHAR}, #{agentNo,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, #{registryDate,jdbcType=TIMESTAMP}, 
      #{businessLicense,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{companyPicPath,jdbcType=VARCHAR}, 
      #{idCardFrontPath,jdbcType=VARCHAR}, #{idCardBackPath,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.github.pattern.common.domain.Agent" >
    insert into pattern_agent
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="agentId != null" >
        agent_id,
      </if>
      <if test="agentName != null" >
        agent_name,
      </if>
      <if test="agentNo != null" >
        agent_no,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="registryDate != null" >
        registry_date,
      </if>
      <if test="businessLicense != null" >
        business_license,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="companyPicPath != null" >
        company_pic_path,
      </if>
      <if test="idCardFrontPath != null" >
        idcard_front_path,
      </if>
      <if test="idCardBackPath != null" >
        idcard_back_path,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="qq != null" >
        qq,
      </if>
      <if test="wechat != null" >
        wechat,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="agentId != null" >
        #{agentId,jdbcType=INTEGER},
      </if>
      <if test="agentName != null" >
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="agentNo != null" >
        #{agentNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="registryDate != null" >
        #{registryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="businessLicense != null" >
        #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="companyPicPath != null" >
        #{companyPicPath,jdbcType=VARCHAR},
      </if>
      <if test="idCardFrontPath != null" >
        #{idCardFrontPath,jdbcType=VARCHAR},
      </if>
      <if test="idCardBackPath != null" >
        #{idCardBackPath,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.pattern.common.domain.Agent" >
    update pattern_agent
    <set >
      <if test="agentName != null" >
        agent_name = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="agentNo != null" >
        agent_no = #{agentNo,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="registryDate != null" >
        registry_date = #{registryDate,jdbcType=TIMESTAMP},
      </if>
      <if test="businessLicense != null" >
        business_license = #{businessLicense,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="companyPicPath != null" >
        company_pic_path = #{companyPicPath,jdbcType=VARCHAR},
      </if>
      <if test="idCardFrontPath != null" >
        idcard_front_path = #{idCardFrontPath,jdbcType=VARCHAR},
      </if>
      <if test="idCardBackPath != null" >
        idcard_back_path = #{idCardBackPath,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="qq != null" >
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null" >
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where agent_id = #{agentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.pattern.common.domain.Agent" >
    update pattern_agent
    set agent_name = #{agentName,jdbcType=VARCHAR},
      agent_no = #{agentNo,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      registry_date = #{registryDate,jdbcType=TIMESTAMP},
      business_license = #{businessLicense,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      company_pic_path = #{companyPicPath,jdbcType=VARCHAR},
      idcard_front_path = #{idCardFrontPath,jdbcType=VARCHAR},
      idcard_back_path = #{idCardBackPath,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where agent_id = #{agentId,jdbcType=INTEGER}
  </update>
   
   <select id="pageCount" resultType="long" parameterType="map" >
    select count(*)
       from pattern_agent
       <where>
    	<if test="statusList != null and statusList.size() > 0">
      		status in
      		<foreach collection="statusList" item="status" index="index" open="(" close=")" separator=",">
	   			#{status,jdbcType=INTEGER}
			</foreach>
      </if>
    </where>
  </select>
  
  <select id="pageList" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from pattern_agent  
    <where>
    	<if test="statusList != null and statusList.size() > 0">
      		status in
      		<foreach collection="statusList" item="status" index="index" open="(" close=")" separator=",">
	   			#{status,jdbcType=INTEGER}
			</foreach>
      </if>
    </where>
    
	<if test="start !=null and offset !=null">
      limit #{start}, #{offset}
    </if>
    
  </select>
    
</mapper>