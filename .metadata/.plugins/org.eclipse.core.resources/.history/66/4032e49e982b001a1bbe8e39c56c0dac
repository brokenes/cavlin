<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.server.manager.RoleDao" >
  <resultMap id="BaseResultMap" type="Role" >
    <id column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    role_id, name, title, description, create_time, update_time, status
  </sql>
  
 	<!-- 根据用户id获取所属的角色 -->
	<select id="selectRoleByUserId" parameterType="map" resultMap="BaseResultMap">
		select
			<include refid="Base_Column_List" />
				from admin_role ur where ur.role_id in (
					select uur.role_id from admin_user_role uur where uur.user_id=#{userId,jdbcType=INTEGER}
				)
	</select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
        select
        <include refid="Base_Column_List" />
        from admin_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <select id="allRolesList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin_role
    </select>
    <select id="selectRoleByRoleName" parameterType="map" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
        from admin_role
        where name = #{name,jdbcType=VARCHAR}
    </select>
    <select id="pageRoleListCount" parameterType="map" resultType="long">
        select count(*) from admin_role
    </select>

    <select id="pageRoleList" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin_role
        <if test="start!=null and offset!=null">
            limit #{start}, #{offset}
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from admin_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </delete>
    <insert id="insertSelective" parameterType="map" >
        insert into admin_role
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="roleId != null" >
                role_id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="title != null" >
                title,
            </if>
            <if test="description != null" >
                description,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="status != null" >
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="roleId != null" >
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="title != null" >
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null" >
                #{status,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="map" >
        update admin_role
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="title != null" >
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null" >
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
                update_time = NOW(),
            <if test="status != null" >
                status = #{status,jdbcType=TINYINT},
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
</mapper>