package com.github.admin.handle;

import javax.servlet.http.HttpServletRequest;

import org.apache.shiro.ShiroException;
import org.apache.shiro.authz.AuthorizationException;
import org.apache.shiro.authz.UnauthorizedException;
import org.apache.shiro.session.InvalidSessionException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;
import org.springframework.web.method.HandlerMethod;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.NoHandlerFoundException;

import com.github.admin.common.exception.AccountNotFoundException;
import com.github.admin.common.utils.ResultUtils;
import com.github.admin.common.utils.ResultVo;
import com.github.admin.utils.SpringWebUtils;
import com.github.appmodel.domain.result.ModelResult;

@RestControllerAdvice
public class GlobalExceptionHandler{

	private final static Logger LOGGER = LoggerFactory.getLogger(GlobalExceptionHandler.class);
	
	@ExceptionHandler(ShiroException.class)
	public Object resolveShiroException() {
		ModelResult<ResultVo> modelResult = new ModelResult<ResultVo>();
		modelResult.withError("403", "您没有权限操作！");
		return ResultUtils.buildResult(modelResult);
	}
	
	@ExceptionHandler(Exception.class)
	public ModelAndView resolveException(HttpServletRequest request, HandlerMethod handlerMethod, Throwable ex) {
		LOGGER.info("全局统一异常处理");
		if(SpringWebUtils.isAjax(handlerMethod))
		request.setAttribute("ex", exception);
		ModelAndView mv = new ModelAndView();
		if (null != request.getHeader("X-Requested-With") && "XMLHttpRequest".equalsIgnoreCase(request.getHeader("X-Requested-With"))) {
			request.setAttribute("requestHeader", "ajax");
			
			return null;
		}
		// shiro没有权限异常
		Object e = request.getAttribute("ex");
		mv.addObject("ex", exception);
		
		if (exception instanceof AccountNotFoundException) {
			mv.setViewName("403");
			return mv;
		}
		
		if (exception instanceof UnauthorizedException) {
			mv.setViewName("403");
			return mv;
		}
		// shiro会话已过期异常
		if (exception instanceof InvalidSessionException) {
			mv.setViewName("403");
			return mv;
		}
		if (exception instanceof AuthorizationException){
//			return new AdminModel(MsgCode.SYSTEM_EXCEPTION,"没有权限");
			mv.setViewName("403");
			return mv;
		}
		if(exception instanceof NoHandlerFoundException) {
			mv.setViewName("404");
			return mv;
		}
		mv.setViewName("error");
		return mv;
	}

}
