package com.github.admin.server.service;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.github.admin.common.domain.System;
import com.github.admin.common.service.SystemService;
import com.github.admin.common.vo.PageVo;
import com.github.admin.server.dao.SystemDao;
import com.github.appmodel.domain.result.ModelResult;
import com.github.appmodel.page.DataPage;


@Service
public class SystemServiceImpl implements SystemService{

	@Autowired
	private SystemDao systemDao;
	
	@Override
	public ModelResult<PageVo> pageSystemList(DataPage<System> dataPage) {
		ModelResult<PageVo> modelResult = new ModelResult<PageVo>();
		PageVo pageVo = new PageVo();
		int start = dataPage.getStartIndex();
		int offset = dataPage.getPageSize();
		long totalCount = systemDao.pageSystemListCount();
		List<System> result = systemDao.pageSystemList(start,offset);
		pageVo.setTotal(totalCount);
		pageVo.setRows(result);
		modelResult.setModel(pageVo);
		return modelResult;
	}

	@Override
	public ModelResult<Integer> insertSelective(System system) {
		ModelResult<Integer> modelResult = new ModelResult<Integer>();
		int result = systemDao.insertSelective(system);
		if(result > 0) {
			modelResult.setModel(result);
		}else {
			modelResult.withError("0","添加失败!");
		}
		return modelResult;
	}

	@Override
	@Transactional
	public ModelResult<Integer> deleteByPrimaryKey(String ids) {
		ModelResult<Integer> modelResult = new ModelResult<Integer>();
		Integer result = 0;
		if(StringUtils.isNotBlank(ids)) {
			String[] systemIds = ids.split("-");
			for(String systemId:systemIds) {
				result += systemDao.deleteByPrimaryKey(systemId);
			}
		}
		if(result > 0) {
			modelResult.setModel(result);
		}else {
			modelResult.withError("0","删除失败!");
		}
		return modelResult;
	}

	@Override
	public ModelResult<System> selectByPrimaryKey(Integer systemId) {
		ModelResult<System> modelResult = new ModelResult<System>();
		if(systemId == null) {
			modelResult.withError("0", "系统ysystemId为空！");
		}else {
			System system = systemDao.selectByPrimaryKey(systemId);
			modelResult.setModel(system);
		}
		return modelResult;
	}

	@Override
	public ModelResult<Integer> updateByPrimaryKeySelective(System system) {
		ModelResult<Integer> modelResult = new ModelResult<Integer>();
		if(system == null || system.getSystemId() == null) {
			modelResult.withError("0","编辑失败!");
			return modelResult;
		}
		int result = systemDao.updateByPrimaryKeySelective(system);
		if(result > 0) {
			modelResult.setModel(result);
		}else {
			modelResult.withError("0","添加失败!");
		}
		return modelResult;
	}

}
